@model SafeBet.Models.RouletteViewModel
@{
    ViewData["Title"] = "Roulette";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-12">
            <h1 class="text-center mb-4">Roulette</h1>
            
            @if (TempData["Message"] != null)
            {
                <div class="alert alert-@(TempData["MessageType"]) alert-dismissible fade show" role="alert">
                    @TempData["Message"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            <!-- Game Status -->
            <div class="row mb-4">
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">Game Status</h5>
                            @if (Model.Game.LastResult.HasValue)
                            {
                                <p class="card-text">
                                    <strong>Last Result:</strong> @Model.Game.LastResult (@Model.Game.LastColor)<br>
                                    <strong>Total Winnings:</strong> 
                                    <span class="@(Model.Game.TotalWinnings > 0 ? "text-success" : Model.Game.TotalWinnings < 0 ? "text-danger" : "text-muted")">
                                        $@Model.Game.TotalWinnings
                                    </span>
                                </p>
                            }
                            else
                            {
                                <p class="card-text">No games played yet.</p>
                            }
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">Current Bets</h5>
                            @if (Model.Game.CurrentBets.Any())
                            {
                                <p class="card-text">
                                    <strong>Total Bet:</strong> $@Model.Game.GetTotalBetAmount()<br>
                                    <strong>Bets:</strong>
                                    @foreach (var bet in Model.Game.CurrentBets)
                                    {
                                        <span class="badge bg-primary me-1">@bet.BetType: $@bet.Amount</span>
                                    }
                                </p>
                            }
                            else
                            {
                                <p class="card-text">No bets placed.</p>
                            }
                        </div>
                    </div>
                </div>
            </div>

                            <!-- Betting Controls -->
            <div class="row mb-4">
                <div class="col-md-4">
                    <div class="card">
                        <div class="card-body">
                            <h6 class="card-title text-dark">Place Bet</h6>
                            <form asp-action="PlaceBet" method="post" class="mb-3">
                                <div class="input-group">
                                    <input type="number" name="betAmount" value="@Model.BetAmount" min="1" class="form-control" placeholder="Bet Amount" required>
                                    <input type="hidden" name="betType" id="selectedBetType" value="" required>
                                    <button type="submit" class="btn btn-primary" onclick="return validateBet()">Place Bet</button>
                                </div>
                                <small class="text-muted">Select a betting area first, then enter amount</small>
                            </form>
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <form asp-action="Spin" method="post" class="mb-3">
                        <button type="submit" class="btn btn-success btn-lg w-100">SPIN</button>
                    </form>
                </div>
                <div class="col-md-4">
                    <div class="d-flex gap-2">
                        <form asp-action="ClearBets" method="post" class="mb-3">
                            <button type="submit" class="btn btn-warning">Clear Bets</button>
                        </form>
                        <form asp-action="ToggleOdds" method="post" class="mb-3">
                            <button type="submit" class="btn btn-info">
                                @(Model.Game.ShowOdds ? "Hide" : "Show") Odds
                            </button>
                        </form>
                    </div>
                </div>
            </div>

            <!-- Roulette Wheel -->
            <div class="row mb-4">
                <div class="col-md-4">
                    <div class="card">
                        <div class="card-body text-center">
                            <h5 class="card-title">Roulette Wheel</h5>
                            <div class="roulette-wheel">
                                @{
                                    var wheelNumbers = new[] { 0, 32, 15, 19, 4, 21, 2, 25, 17, 34, 6, 27, 13, 36, 11, 30, 8, 23, 10, 5, 24, 16, 33, 1, 20, 14, 31, 9, 22, 18, 29, 7, 28, 12, 35, 3, 26 };
                                }
                                @foreach (var num in wheelNumbers)
                                {
                                    string colorClass = num == 0 ? "green" : 
                                                      new[]{1,3,5,7,9,12,14,16,18,19,21,23,25,27,30,32,34,36}.Contains(num) ? "red" : "black";
                                    string winningClass = (Model.Game.LastResult.HasValue && Model.Game.LastResult.Value == num) ? "winning" : "";
                                    <div class="wheel-number @colorClass @winningClass" data-bet="@num" onclick="selectBet('@num')">
                                        @(num == 0 ? "0" : num.ToString())
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Betting Table -->
                <div class="col-md-8">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">Betting Table</h5>
                            
                            <!-- Dozens -->
                            <div class="row mb-2">
                                <div class="col-4">
                                    <button class="btn btn-outline-primary w-100 bet-button" data-bet="1st12" onclick="selectBet('1st12')">
                                        1st 12
                                        @if (Model.Game.ShowOdds) { <small>(2:1)</small> }
                                    </button>
                                </div>
                                <div class="col-4">
                                    <button class="btn btn-outline-primary w-100 bet-button" data-bet="2nd12" onclick="selectBet('2nd12')">
                                        2nd 12
                                        @if (Model.Game.ShowOdds) { <small>(2:1)</small> }
                                    </button>
                                </div>
                                <div class="col-4">
                                    <button class="btn btn-outline-primary w-100 bet-button" data-bet="3rd12" onclick="selectBet('3rd12')">
                                        3rd 12
                                        @if (Model.Game.ShowOdds) { <small>(2:1)</small> }
                                    </button>
                                </div>
                            </div>

                            <!-- Main Numbers Grid -->
                            <div class="row">
                                <div class="col-1">
                                    <!-- Zero Column -->
                                    <div class="d-grid gap-1 mb-2">
                                        @{
                                            string winningZeroClass = (Model.Game.LastResult.HasValue && Model.Game.LastResult.Value == 0) ? "winning-button" : "";
                                            string winningDoubleZeroClass = (Model.Game.LastResult.HasValue && Model.Game.LastResult.Value == 00) ? "winning-button" : "";
                                        }
                                        <button class="btn btn-success bet-button @winningZeroClass" data-bet="0" onclick="selectBet('0')">
                                            0
                                            @if (Model.Game.ShowOdds) { <small>(35:1)</small> }
                                        </button>
                                        <button class="btn btn-success bet-button @winningDoubleZeroClass" data-bet="00" onclick="selectBet('00')">
                                            00
                                            @if (Model.Game.ShowOdds) { <small>(35:1)</small> }
                                        </button>
                                    </div>
                                </div>
                                <div class="col-9">
                                    <!-- Numbers 1-36 -->
                                    @for (int row = 0; row < 12; row++)
                                    {
                                        <div class="row mb-1">
                                            @for (int col = 0; col < 3; col++)
                                            {
                                                int number = (row * 3) + col + 1;
                                                bool isRed = new[]{1,3,5,7,9,12,14,16,18,19,21,23,25,27,30,32,34,36}.Contains(number);
                                                string colorClass = isRed ? "btn-danger" : "btn-dark";
                                                <div class="col-4">
                                                    @{
                                                        string winningButtonClass = (Model.Game.LastResult.HasValue && Model.Game.LastResult.Value == number) ? "winning-button" : "";
                                                    }
                                                    <button class="btn @colorClass w-100 bet-button @winningButtonClass" data-bet="@number" onclick="selectBet('@number')">
                                                        @number
                                                        @if (Model.Game.ShowOdds) { <small>(35:1)</small> }
                                                    </button>
                                                </div>
                                            }
                                        </div>
                                    }
                                </div>
                                <div class="col-2">
                                    <!-- Column Bets -->
                                    <div class="d-grid gap-1">
                                        <button class="btn btn-warning bet-button" data-bet="col1" onclick="selectBet('col1')">
                                            2 to 1
                                            @if (Model.Game.ShowOdds) { <small>(2:1)</small> }
                                        </button>
                                        <button class="btn btn-warning bet-button" data-bet="col2" onclick="selectBet('col2')">
                                            2 to 1
                                            @if (Model.Game.ShowOdds) { <small>(2:1)</small> }
                                        </button>
                                        <button class="btn btn-warning bet-button" data-bet="col3" onclick="selectBet('col3')">
                                            2 to 1
                                            @if (Model.Game.ShowOdds) { <small>(2:1)</small> }
                                        </button>
                                    </div>
                                </div>
                            </div>

                            <!-- Outside Bets -->
                            <div class="row mt-2">
                                <div class="col-2">
                                    <button class="btn btn-outline-secondary w-100 bet-button" data-bet="1to18" onclick="selectBet('1to18')">
                                        1 to 18
                                        @if (Model.Game.ShowOdds) { <small>(1:1)</small> }
                                    </button>
                                </div>
                                <div class="col-2">
                                    <button class="btn btn-outline-secondary w-100 bet-button" data-bet="even" onclick="selectBet('even')">
                                        EVEN
                                        @if (Model.Game.ShowOdds) { <small>(1:1)</small> }
                                    </button>
                                </div>
                                <div class="col-2">
                                    <button class="btn btn-danger w-100 bet-button" data-bet="red" onclick="selectBet('red')">
                                        RED
                                        @if (Model.Game.ShowOdds) { <small>(1:1)</small> }
                                    </button>
                                </div>
                                <div class="col-2">
                                    <button class="btn btn-dark w-100 bet-button" data-bet="black" onclick="selectBet('black')">
                                        BLACK
                                        @if (Model.Game.ShowOdds) { <small>(1:1)</small> }
                                    </button>
                                </div>
                                <div class="col-2">
                                    <button class="btn btn-outline-secondary w-100 bet-button" data-bet="odd" onclick="selectBet('odd')">
                                        ODD
                                        @if (Model.Game.ShowOdds) { <small>(1:1)</small> }
                                    </button>
                                </div>
                                <div class="col-2">
                                    <button class="btn btn-outline-secondary w-100 bet-button" data-bet="19to36" onclick="selectBet('19to36')">
                                        19 to 36
                                        @if (Model.Game.ShowOdds) { <small>(1:1)</small> }
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Game History -->
            @if (Model.Game.GameHistory.Any())
            {
                <div class="row">
                    <div class="col-12">
                        <div class="card">
                            <div class="card-body">
                                <h5 class="card-title">Game History</h5>
                                <div class="table-responsive">
                                    <table class="table table-sm">
                                        <thead>
                                            <tr>
                                                <th>Result</th>
                                                <th>Color</th>
                                                <th>Total Bet</th>
                                                <th>Winnings</th>
                                                <th>Net</th>
                                                <th>Time</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var game in Model.Game.GameHistory.TakeLast(10).Reverse())
                                            {
                                                <tr>
                                                    <td>@game.Result</td>
                                                    <td><span class="badge bg-@(game.Color == "red" ? "danger" : game.Color == "black" ? "dark" : "success")">@game.Color.ToUpper()</span></td>
                                                    <td>$@game.TotalBet</td>
                                                    <td>$@game.Winnings</td>
                                                    <td class="@(game.NetWinnings > 0 ? "text-success" : game.NetWinnings < 0 ? "text-danger" : "text-muted")">
                                                        $@game.NetWinnings
                                                    </td>
                                                    <td>@game.Timestamp.ToString("HH:mm:ss")</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }

            <!-- Rules Section -->
            <div class="row mt-4">
                <div class="col-12">
                    <div class="card">
                        <div class="card-header">
                            <h5 class="card-title mb-0">
                                <button class="btn btn-link text-decoration-none w-100 text-start" type="button" data-bs-toggle="collapse" data-bs-target="#collapseRules" aria-expanded="false" aria-controls="collapseRules">
                                    Roulette Rules <i class="fas fa-chevron-down float-end"></i>
                                </button>
                            </h5>
                        </div>
                        <div id="collapseRules" class="collapse" aria-labelledby="rulesHeading">
                            <div class="card-body" style="background-color: #f8f9fa; color: #333;">
                                <h6 style="color: #333;">Objective:</h6>
                                <p style="color: #333;">Predict which number the ball will land on after the wheel is spun.</p>

                                <h6 style="color: #333;">Betting Options:</h6>
                                <ul style="color: #333;">
                                    <li style="color: #333;"><strong>Straight Up (Single Number):</strong> Bet on any single number (0, 00, 1-36). Payout: 35 to 1.</li>
                                    <li style="color: #333;"><strong>Red/Black:</strong> Bet on the color of the winning number. Payout: 1 to 1.</li>
                                    <li style="color: #333;"><strong>Even/Odd:</strong> Bet on whether the winning number is even or odd. Payout: 1 to 1.</li>
                                    <li style="color: #333;"><strong>1-18/19-36:</strong> Bet on whether the winning number is in the low (1-18) or high (19-36) range. Payout: 1 to 1.</li>
                                    <li style="color: #333;"><strong>Dozens Bet:</strong> Bet on the first (1-12), second (13-24), or third (25-36) set of twelve numbers. Payout: 2 to 1.</li>
                                    <li style="color: #333;"><strong>Column Bet:</strong> Bet on one of the three vertical columns. Payout: 2 to 1.</li>
                                </ul>

                                <h6 style="color: #333;">Gameplay:</h6>
                                <ol style="color: #333;">
                                    <li style="color: #333;">Click on any number or betting area to select it.</li>
                                    <li style="color: #333;">Enter your bet amount in the input field.</li>
                                    <li style="color: #333;">Click "Place Bet" to confirm your bet.</li>
                                    <li style="color: #333;">Click "SPIN" to spin the wheel.</li>
                                    <li style="color: #333;">The winning number will be highlighted in gold.</li>
                                    <li style="color: #333;">Your winnings will be calculated and displayed.</li>
                                </ol>

                                <h6 style="color: #333;">"Reveal Odds?" Feature:</h6>
                                <p style="color: #333;">Toggle this switch to see the odds and payout information for each betting area when you hover over them.</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
.roulette-wheel {
    display: grid;
    grid-template-columns: repeat(6, 1fr);
    gap: 2px;
    width: 200px;
    height: 200px;
    margin: 0 auto;
    border: 3px solid #8B4513;
    border-radius: 50%;
    padding: 10px;
    background: #228B22;
}

.wheel-number {
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 10px;
    font-weight: bold;
    border-radius: 3px;
    cursor: pointer;
    transition: all 0.2s ease;
    min-height: 25px;
    color: white !important;
    text-shadow: 1px 1px 1px rgba(0,0,0,0.8);
}

.wheel-number.red {
    background: #DC143C;
    color: white !important;
}

.wheel-number.black {
    background: #000;
    color: white !important;
}

.wheel-number.green {
    background: #228B22;
    color: white !important;
}

.wheel-number:hover {
    transform: scale(1.1);
    box-shadow: 0 0 5px gold;
}

.wheel-number.winning {
    animation: winningPulse 2s ease-in-out infinite;
    box-shadow: 0 0 15px #FFD700, 0 0 25px #FFD700, 0 0 35px #FFD700;
    border: 3px solid #FFD700;
    transform: scale(1.2);
    z-index: 10;
    position: relative;
}

@@keyframes winningPulse {
    0% {
        box-shadow: 0 0 15px #FFD700, 0 0 25px #FFD700, 0 0 35px #FFD700;
        transform: scale(1.2);
    }
    50% {
        box-shadow: 0 0 25px #FFD700, 0 0 35px #FFD700, 0 0 45px #FFD700;
        transform: scale(1.3);
    }
    100% {
        box-shadow: 0 0 15px #FFD700, 0 0 25px #FFD700, 0 0 35px #FFD700;
        transform: scale(1.2);
    }
}

.bet-button {
    font-size: 12px;
    padding: 5px;
    margin: 1px;
    color: white !important;
    text-shadow: 1px 1px 1px rgba(0,0,0,0.8);
}

.bet-button:hover {
    transform: scale(1.05);
    color: white !important;
}

.bet-button.selected {
    box-shadow: 0 0 10px gold;
    border: 2px solid gold;
    color: white !important;
}

.bet-button.winning-button {
    animation: winningButtonPulse 2s ease-in-out infinite;
    box-shadow: 0 0 15px #FFD700, 0 0 25px #FFD700, 0 0 35px #FFD700;
    border: 3px solid #FFD700 !important;
    transform: scale(1.1);
    z-index: 10;
    position: relative;
}

@@keyframes winningButtonPulse {
    0% {
        box-shadow: 0 0 15px #FFD700, 0 0 25px #FFD700, 0 0 35px #FFD700;
        transform: scale(1.1);
    }
    50% {
        box-shadow: 0 0 25px #FFD700, 0 0 35px #FFD700, 0 0 45px #FFD700;
        transform: scale(1.15);
    }
    100% {
        box-shadow: 0 0 15px #FFD700, 0 0 25px #FFD700, 0 0 35px #FFD700;
        transform: scale(1.1);
    }
}

/* Ensure all text is visible */
.card-title {
    color: #333 !important;
}

.card-text {
    color: #333 !important;
}

.text-muted {
    color: #6c757d !important;
}

/* Button text visibility */
.btn {
    color: white !important;
    text-shadow: 1px 1px 1px rgba(0,0,0,0.5);
}

.btn-outline-primary, .btn-outline-secondary {
    color: #007bff !important;
    text-shadow: none;
}

.btn-outline-primary:hover, .btn-outline-secondary:hover {
    color: white !important;
    text-shadow: 1px 1px 1px rgba(0,0,0,0.5);
}
</style>

<script>
let selectedBetType = '';

function selectBet(betType) {
    selectedBetType = betType;
    document.getElementById('selectedBetType').value = betType;
    
    // Remove previous selection
    document.querySelectorAll('.bet-button, .wheel-number').forEach(btn => {
        btn.classList.remove('selected');
    });
    
    // Add selection to clicked button
    event.target.classList.add('selected');
    
    // Show feedback
    console.log('Selected bet type:', betType);
}

function validateBet() {
    if (!selectedBetType) {
        alert('Please select a betting area first by clicking on a number or betting option.');
        return false;
    }
    
    const betAmount = document.querySelector('input[name="betAmount"]').value;
    if (!betAmount || betAmount <= 0) {
        alert('Please enter a valid bet amount.');
        return false;
    }
    
    return true;
}

// Add click handlers to all betting areas
document.addEventListener('DOMContentLoaded', function() {
    // Add click handlers to wheel numbers
    document.querySelectorAll('.wheel-number').forEach(btn => {
        btn.addEventListener('click', function() {
            const betType = this.getAttribute('data-bet');
            selectBet(betType);
        });
    });
    
    // Add click handlers to bet buttons
    document.querySelectorAll('.bet-button').forEach(btn => {
        btn.addEventListener('click', function() {
            const betType = this.getAttribute('data-bet');
            selectBet(betType);
        });
    });
});
</script>